version: "3"
services:

  # mysql-cmdline:
  #     image: mysql:latest
  #     container_name: mysql-cmdline
  #     external_links:
  #       - mysql:db
  #     command: bash -c "echo 'drop database if exists test_cs4501; grant all on test_cs4501.* to '\''www'\''@'\''%'\'';'"


  models:
    image: tp33/django
    container_name: models
    external_links:
      - mysql:db
    networks:
      - backend
      - service_mesh
    ports:
      - "8001:8000"
    volumes:
      - ./isa:/app
    command: bash -c "python manage.py migrate && python manage.py loaddata db.json && mod_wsgi-express start-server --log-to-terminal --reload-on-changes ./isa/wsgi.py"


  experience:
    image: tp33/django
    container_name: experience
    networks:
      - service_mesh
      - public
    ports:
      - "8002:8000"
    volumes:
      - ./experience:/app
    command: "mod_wsgi-express start-server --log-to-terminal --reload-on-changes ./experience/wsgi.py"

  front:
    image: tp33/django
    container_name: front
    networks:
      - public
    ports:
      - "8000:8000"
    volumes:
      - ./front:/app
    command: "mod_wsgi-express start-server --log-to-terminal --reload-on-changes ./front/wsgi.py"

  batch:
    image: tp33/django
    container_name: batch
    depends_on:
        - kafka
        - es
    volumes:
        - ./batch:/app
        - ./data:/tmp/data
    networks:
        - batch_network
    restart: on-failure
    command: bash -c "python3 -u new_listing.py && python3 -u update_counts.py && python3 -u view_counts.py"

  kafka:
    image: spotify/kafka
    container_name: kafka
    networks:
      - batch_network
      - service_mesh
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
    hostname: kafka

  es:
    image: elasticsearch:7.4.0
    container_name: es
    environment:
        - discovery.type=single-node
    networks:
        - service_mesh
        - batch_network
    ports:
        - "9200:9200"

networks:
  backend:
  public:
  service_mesh:
  batch_network: