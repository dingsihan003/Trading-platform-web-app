version: "3"
services:

  # mysql-cmdline:
  #     image: mysql:latest
  #     container_name: mysql-cmdline
  #     external_links:
  #       - mysql:db
  #     command: bash -c "echo 'drop database if exists test_cs4501; grant all on test_cs4501.* to '\''www'\''@'\''%'\'';'"


  models:
    image: tp33/django
    container_name: models
    external_links:
      - mysql:db
    networks:
      - backend
      - service_mesh
    ports:
      - "8001:8000"
    # expose:
    #   - "8000"
    depends_on:
      - "es"
    volumes:
      - ./isa:/app
    command: bash -c "python manage.py migrate && python manage.py loaddata db.json && mod_wsgi-express start-server --log-to-terminal --reload-on-changes ./isa/wsgi.py"


  experience:
    image: tp33/django
    container_name: experience
    networks:
      - service_mesh
      - web_exp
    ports:
      - "8002:8000"
    # expose:
    #   - "8000"
    volumes:
      - ./experience:/app
    command: "mod_wsgi-express start-server --log-to-terminal --reload-on-changes ./experience/wsgi.py"

  web1:
    image: tp33/django
    container_name: web1
    networks:
      - web_exp
      - haproxy_web
    ports:
      - "8000:8000"
    # expose:
    #   - "8000"
    volumes:
      - ./front:/app
    command: "mod_wsgi-express start-server --log-to-terminal --reload-on-changes ./front/wsgi.py"

  web2:
    image: tp33/django
    container_name: web2
    networks:
      - web_exp
      - haproxy_web
    ports:
      - "8003:8000"
    # expose:
    #   - "8000"
    volumes:
      - ./front:/app
    command: "mod_wsgi-express start-server --log-to-terminal --reload-on-changes ./front/wsgi.py"

  batch:
    image: tp33/django
    container_name: batch
    depends_on:
        - kafka
        - es
    volumes:
        - ./batch:/app
        - ./data:/tmp/data
    networks:
        - batch_network
    restart: on-failure
    command: bash -c "python3 -u new_listing.py 
                      & python3 -u update_counts.py 
                      & python3 -u view_counts.py"

  kafka:
    image: spotify/kafka
    container_name: kafka
    networks:
      - batch_network
      - service_mesh
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
    hostname: kafka

  es:
    image: elasticsearch:7.4.0
    container_name: es
    environment:
        - discovery.type=single-node
    networks:
        - service_mesh
        - batch_network
    ports:
        - "9200:9200"

  selenium-chrome:
    image: selenium/standalone-chrome
    container_name: selenium-chrome
    depends_on:
      - haproxy
    networks:
      - service_mesh
      - public
      - haproxy_web
    ports:
      - "4444:4444"

  selenium-test:
    image: tp33/django
    container_name: selenium-test
    networks:
      - service_mesh
      - haproxy_web
    depends_on:
      - selenium-chrome
      - haproxy
    volumes:
      - ./selenium:/app
    command: tail -f /dev/null

  haproxy:
    image: haproxy
    container_name: haproxy
    depends_on:
      - web1
      - web2
    volumes:
      - ./haproxy:/app
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - public
      - haproxy_web
    ports:
      - "80:80"
    environment:
      - BACKENDS
      - BALANCE=roundrobin
  
  spark-master:
    image: gettyimages/spark
    command: bin/spark-class org.apache.spark.deploy.master.Master -h spark-master
    container_name: spark-master
    hostname: spark-master
    environment:
      MASTER: spark://spark-master:7077
      SPARK_CONF_DIR: /conf
    depends_on:
      - models
    networks:
      - service_mesh
    expose:
      - 7001
      - 7002
      - 7003
      - 7004
      - 7005
      - 7006
      - 7077
      - 6066
    ports:
      - 4040:4040
      - 6066:6066
      - 7077:7077
      - 8080:8080
    volumes:
      - ./spark:/tmp/spark
      - ./data:/tmp/data

  spark-worker:
    image: gettyimages/spark
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    container_name: spark-worker
    hostname: spark-worker
    environment:
      SPARK_CONF_DIR: /conf
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 512m
      SPARK_WORKER_PORT: 8881
      SPARK_WORKER_WEBUI_PORT: 8081
    depends_on:
      - spark-master
    links:
      - spark-master
    expose:
      - 7012
      - 7013
      - 7014
      - 7015
      - 7016
      - 8881
    networks:
      - service_mesh
    ports:
      - 8081:8081
    volumes:
      - ./spark:/tmp/spark
      - ./data:/tmp/data

networks:
  backend:
    #  external:
    #    name: backend
  public:
  service_mesh:
  batch_network:
  web_exp:
  haproxy_web: